package {database.package}.view;{\n}{\n}

// - - - - thoughtfully generated by synapticloop h2zero - - - - {\n}
//    with the use of synapticloop templar templating language{\n}{\n}

import synapticloop.h2zero.base.view.ViewBase;{\n}

// import synapticloop.h2zero.base.manager.ConnectionManager;{\n}
// import synapticloop.h2zero.base.exception.H2ZeroPrimaryKeyException;{\n}
// import java.sql.Connection;{\n}
// import java.sql.Date;{\n}
// import java.sql.ResultSet;{\n}
// import java.sql.Timestamp;{\n}
// import java.sql.Statement;{\n}
// import java.sql.PreparedStatement;{\n}
// import java.sql.SQLException;{\n}
{\n}

{\n}{\n}

public class {view.javaClassName} extends ViewBase {{{\n}

{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
				LIST ALL OF THE JAVA FIELDS
}

{loop view.fields as field}
	{\t}private {field.javaType} {field.javaName} = null;{\n}

{endloop}
{\n}


{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
				CONSTRUCTORS
			what about null-able fields?
}

{\t}public {view.javaClassName}(
	{loop view.fields as field}
		{field.javaType} {field.javaName}
		{if fieldStatus.last}{else}, {endif}
	{endloop}
) {{{\n}
	{loop view.fields as field}
		{\t}{\t}this.{field.javaName} = {field.javaName};{\n}
	{endloop}

{\t}}{\n}

{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
				SETTERS AND GETTERS
}
{\t}/*{\n}
{\t} * Boring ol' getters and setters{\n}
{\t} */{\n}
{\n}

{loop view.fields as field}
	{\t}public {field.javaType} get{field.javaAccessorName}() {{{\n}
	{\t}{\t}return(this.{field.javaName});{\n}
	{\t}}{\n}{\n}

{endloop}
}
