package synapticloop.sample.h2zero.inserter;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//                (java-create-inserter.templar)

import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.sql.Types;
import java.sql.Date;
import java.sql.Blob;
import java.sql.Clob;

import synapticloop.h2zero.base.manager.ConnectionManager;
import synapticloop.sample.h2zero.model.util.Constants;

public class UserInserter {
	// the binder is unused in code, but will generate compile problems if this 
	// class is no longer referenced in the h2zero file. Just a nicety for
	// removing dead code
	@SuppressWarnings("unused")
	private static final String BINDER = Constants.USER_binder;

	// static fields generated by synapticloop h20
	private static final String SQL_BUILTIN_INSERT_ALL = "insert into user(id_user, id_user_type, fl_is_alive, num_age, nm_username, txt_address_email, txt_password, dtm_signup)";
	private static final String SQL_BUILTIN_INSERT_VALUES = SQL_BUILTIN_INSERT_ALL + " values (?, ?, ?, ?, ?, ?, ?, ?)";
	// static inserter SQL generated from the user input

	public static int insert(Connection connection, Long idUser, Long idUserType, Boolean flIsAlive, Integer numAge, String nmUsername, String txtAddressEmail, String txtPassword, Timestamp dtmSignup) throws SQLException {
		PreparedStatement preparedStatement = connection.prepareStatement(SQL_BUILTIN_INSERT_VALUES);
		ConnectionManager.setBigint(preparedStatement, 1, idUser);
		ConnectionManager.setBigint(preparedStatement, 2, idUserType);
		ConnectionManager.setBoolean(preparedStatement, 3, flIsAlive);
		ConnectionManager.setInt(preparedStatement, 4, numAge);
		ConnectionManager.setVarchar(preparedStatement, 5, nmUsername);
		ConnectionManager.setVarchar(preparedStatement, 6, txtAddressEmail);
		ConnectionManager.setVarchar(preparedStatement, 7, txtPassword);
		ConnectionManager.setDatetime(preparedStatement, 8, dtmSignup);
		return(preparedStatement.executeUpdate());
	}

	public static int insertSilent(Long idUser, Long idUserType, Boolean flIsAlive, Integer numAge, String nmUsername, String txtAddressEmail, String txtPassword, Timestamp dtmSignup) {
		int numResults = 0;
		Connection connection = null;
		try {
			connection = ConnectionManager.getConnection();
			numResults = insert(connection, idUser, idUserType, flIsAlive, numAge, nmUsername, txtAddressEmail, txtPassword, dtmSignup);
		} catch (SQLException sqlex) {
			sqlex.printStackTrace();
			return(-1);
		} finally {
			ConnectionManager.closeAll(connection);
		}
		return(numResults);
	}

}